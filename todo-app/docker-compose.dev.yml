services:
  app:
    image: todo-fe-dev
    build:
      context: todo-frontend/ # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3000:3000
    container_name: todo-fe-dev # This will name the container hello-front-dev

  server:
    image: todo-be-dev
    build:
      context: todo-backend/
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/app
    ports:
      - 3001:3000
    # environment:
    #   - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    #   - REDIS_URL=redis://redis:6379
    container_name: todo-be-dev
    # depends_on:
    #   - mongo
    #   - redis

  # mongo:
  #   image: mongo
  #   ports:
  #     - 3456:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #     MONGO_INITDB_DATABASE: the_database
  #   volumes:
  #     - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  #     - ./todo-backend/mongo_data:/data/db
  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   command: ["redis-server", "--appendonly", "yes"]
  #   volumes:
  #     - ./todo-backend/redis_data:/data

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server # wait for the backend container to be started

# volumes:
#   mongo_data:
#   redis_data:
